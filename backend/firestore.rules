rules_version='2'

service cloud.firestore {
  match /databases/{database}/documents {
    // Encrypted wellness insights
    // Frontend: read own docs; writes are via Functions only
    match /encrypted_insights/{userEmail} {
      allow read: if request.auth != null && request.auth.token.email == userEmail;
      allow write: if false;

      match /chat_sessions/{sessionId} {
        allow read: if request.auth != null && request.auth.token.email == userEmail;
        allow write: if false;
      }
    }
    
    // Users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Chat sessions are private to each user
    match /chats/{chatId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Anonymous chat data (for privacy-focused mental wellness)
    match /anonymous_chats/{chatId} {
      // Allow creation of anonymous chats
      allow create: if request.auth != null;
      // Allow reading only if user created the chat
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      // Allow updates only if user owns the chat
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // Mood score snapshots for dashboard
    match /mood_scores/{userEmail}/daily/{date} {
      allow read, write: if request.auth != null && request.auth.token.email == userEmail;
    }

    // Journal entries - users can read/write their own journals
    match /journals/{journalId} {
      allow read, write: if request.auth != null && 
        request.auth.token.email == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.token.email == request.resource.data.userId;
    }

    // Journal insights - encrypted journal metrics storage
    match /Journal_insights/{userEmail} {
      allow read: if request.auth != null && request.auth.token.email == userEmail;
      allow write: if false; // Only functions can write

      match /daily/{date} {
        allow read: if request.auth != null && request.auth.token.email == userEmail;
        allow write: if false; // Only functions can write
      }
    }

    // Temporary: Allow debugging (REMOVE IN PRODUCTION)
    // This helps identify what collections are being accessed
    match /{collection}/{document} {
      allow read, write: if request.auth != null && 
        (collection == 'temp_debug' || collection == 'user_debug');
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
